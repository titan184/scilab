<b>Narration</b>

1
00:00:01 --> 00:00:06
Welcome to the spoken tutorial on <b>iterative calculations</b> using <b>Scilab</b>.

2
00:00:07 --> 00:00:10
I am using <b>Scilab version 5.2</b> in <b>Mac operating system</b>

3
00:00:11 --> 00:00:16
but these calculations should work in other versions and also in Scilab that runs in <b>Linux</b> and <b>Windows</b>.

4
00:00:17 --> 00:00:21
I will use the code available in the file 'iteration.sce'.

5
00:00:22 --> 00:00:28
I have opened this file using Scilab editor which I plan to use only as an editor.

6
00:00:29 --> 00:00:37
Let us create a vector using the colon operator. 'i' is equal to 1 colon 5,

7
00:00:38 --> 00:00:41
creates a vector from 1 to 5, in increments of 1.

8
00:00:42 --> 00:00:50
In this command,  'i' is equal to 1 colon 2 colon 5.

9
00:00:51 --> 00:00:55
We see that the middle argument of 2 indicates the increment.

10
00:00:56 --> 00:01:00
1 is the first argument where the vector starts. 'i' cannot go beyond 5,

11
00:01:01 --> 00:01:03
it can be equal to 5, however.

12
00:01:04 --> 00:01:08
Note that if the ending argument changes to 6 the result remains the same.

13
00:01:09 --> 00:01:12
It is not difficult to explain this behavior.

14
00:01:13 --> 00:01:14
Can you think for a moment why this happens?

15
00:01:15 --> 00:01:21
We will now demonstrate the use of the <b>for</b> statement to perform iterative calculations.

16
00:01:22 --> 00:01:27
<b>for i is equal to 1 colon 2 colon 7 disp i end</b> of <b>for loop</b>.

17
00:01:28 --> 00:01:33
I will cut this, paste in Scilab console, press <b>Enter</b>.

18
00:01:34 --> 00:01:36
This code prints out 'i' as we go through the loop.

19
00:01:37 --> 00:01:41
The display is due to the command <b>disp</b> - the passed <b>argument</b> is displayed.

20
00:01:42 --> 00:01:44
Recall that the <b>for loop</b> is used for integer values.

21
00:01:45 --> 00:01:49
In this case, four integer values, namely, 1, 3, 5 and 7 are displayed.

22
00:01:50 --> 00:01:55
The number of times the iterations take place is known as <b>priori</b> in <b>for loops</b>.

23
00:01:56 --> 00:02:00
In the rest of this tutorial, we will stick to the default increment of 1.

24
00:02:01 --> 00:02:09
Let us begin with the loop that displays 'i' equal to 1 to 5.

25
00:02:10 --> 00:02:17
We will modify this code by introducing the <b>break</b> statement.

26
00:02:18 --> 00:02:21
Note that 'i' is displayed only up to 2.

27
00:02:22 --> 00:02:26
The iteration is not carried out till the last value of i, namely 5.

28
00:02:27 --> 00:02:29
When i is equal to 2, the <b>if</b> block is executed for the first time.

29
00:02:30 --> 00:02:33
The <b>break</b> command, however, terminates the loop.

30
00:02:34 --> 00:02:39
If we want to get out of a loop when some intermediate condition is satisfied, we can use the <b>break</b> statement.

31
00:02:40 --> 00:02:44
Note that "i is equal to 2" statement uses the "equal to" sign twice.

32
00:02:45 --> 00:02:49
This is the standard way to compare the equality in programming languages.

33
00:02:50 --> 00:02:55
The result of this comparison statement is a <b>Boolean: true or false</b>.

34
00:02:56 --> 00:03:05
We will introduce the <b>continue</b> statement here, paste, press <b>Enter</b>.

35
00:03:06 --> 00:03:09
This results in 'i' getting displayed only for 4 and 5.

36
00:03:10 --> 00:03:17
For 'i' less than or equal to 3, as given by the i less than or equal to 3 statement, nothing happens.

37
00:03:18 --> 00:03:21
The <b>continue</b> statement makes the program skip the rest of the loop.

38
00:03:22 --> 00:03:24
Unlike the <b>break</b> statement, however, it does not exit the loop.

39
00:03:25 --> 00:03:31
The parameter 'i' is incremented and all the calculations of the loop are executed for the new i.

40
00:03:32 --> 00:03:37
We take a small break and show how to get help for operators of the type 'less than or equal to' (<=).

41
00:03:38 --> 00:03:45
Let us type 'less than or equal to with help'.

42
00:03:46 --> 00:03:50
This opens the Scilab <b>Help Browser</b>.

43
00:03:51 --> 00:03:55
We see that the help is available under the option <b>less</b>.

44
00:03:56 --> 00:04:05
So now after closing this, we type <b>help less</b>.

45
00:04:06 --> 00:04:10
We see the required <b>help</b> instructions here. I will close this.

46
00:04:11 --> 00:04:15
The <b>for</b> statement in Scilab is more powerful than in programming languages.

47
00:04:16 --> 00:04:23
For example, let us perform a <b>loop</b> over a <b>vector</b>:

48
00:04:24 --> 00:04:27
This script displays all values of 'v'.

49
00:04:28 --> 00:04:31
Until now we have been displaying only the variables.

50
00:04:32 --> 00:04:34
We can indeed display the result of a calculation as well.

51
00:04:35 --> 00:04:43
The following code displays the square of the numbers.

52
00:04:44 --> 00:04:47
We have spent quite a bit of time explaining the <b>for loop</b>.

53
00:04:48 --> 00:04:49
Let us now move on to the <b>while loops</b>.

54
00:04:50 --> 00:04:54
The <b>while</b> statement allows us to perform a <b>loop</b> when a Boolean expression is <b>true</b>.

55
00:04:55 --> 00:04:57
At the beginning of the <b>loop</b>, if the expression is <b>true</b>,

56
00:04:58 --> 00:05:01
the statements in the body of the <b>while loop</b> are executed.

57
00:05:02 --> 00:05:07
If the program is written well, the expression becomes <b>false</b> and the <b>loop</b> is ended.

58
00:05:08 --> 00:05:14
Now let us see an example for the <b>while loop</b>:

59
00:05:15 --> 00:05:18
The values of 'i', from 1 to 6 are displayed.

60
00:05:19 --> 00:05:32
<b>Break</b> and <b>continue</b> statements inside the <b>while loop</b> work exactly as they did in the <b>for loop</b> as we demonstrate using <b>break</b>:

61
00:05:33 --> 00:05:38
We can see that the moment 'i' becomes equal to 3, the program exits the <b>loop</b>, thanks to the <b>break</b> statement.

62
00:05:39 --> 00:05:43
You can also try the example for <b>continue</b> statement in <b>while loop</b>.

63
00:05:44 --> 00:05:49
This brings us to the end of this spoken tutorial on <b>iterative calculations</b> using Scilab.

64
00:05:50 --> 00:05:56
Spoken Tutorials are part of the Talk to a Teacher project, supported by the National Mission on Education through ICT.

65
00:05:57 --> 00:05:59
More information on the same is available at the following link <a class="external autonumber" href="http://spoken-tutorial.org/NMEICT-Intro" rel="nofollow">[1]</a>.

66
00:06:00 --> 00:06:05
Thanks for joining. Good bye.

